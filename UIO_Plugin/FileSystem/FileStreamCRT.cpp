#include "FileStreamCRT.h"

namespace UIO_Plugin
{
	FileStreamCRT::FileStreamCRT( const String& _fileName )
		: m_fileName(_fileName)
		, m_file(NULL)
	{
	}
	/////////////////////////////////////////////////////////////////
	FileStreamCRT::~FileStreamCRT()
	{
	}
	/////////////////////////////////////////////////////////////////
	OutputFileStreamCRT::OutputFileStreamCRT( const String& _fileName )
		: FileStreamCRT(_fileName)
	{

	}
	/////////////////////////////////////////////////////////////////
	OutputFileStreamCRT::~OutputFileStreamCRT()
	{

	}
	/////////////////////////////////////////////////////////////////
	void OutputFileStreamCRT::close()
	{
		fclose(m_file);
		m_file = NULL;
	}
	/////////////////////////////////////////////////////////////////
	void OutputFileStreamCRT::destroy()
	{
		delete this;
	}
	/////////////////////////////////////////////////////////////////
	void OutputFileStreamCRT::write( const char* _data, int _count )
	{
		fwrite( _data, 1, _count, m_file );
	}
	/////////////////////////////////////////////////////////////////
	void OutputFileStreamCRT::flush()
	{
		fflush(m_file);
	}
	/////////////////////////////////////////////////////////////////
	bool OutputFileStreamCRT::open()
	{
		m_file = fopen( m_fileName.c_str(), "wb" );
		return m_file != NULL;
	}
	/////////////////////////////////////////////////////////////////
	bool OutputFileStreamCRT::isOpen()
	{
		return m_file != NULL;
	}
	/////////////////////////////////////////////////////////////////
	InputFileStreamCRT::InputFileStreamCRT( const String& _fileName )
		: FileStreamCRT( _fileName )
	{
	}
	/////////////////////////////////////////////////////////////////
	InputFileStreamCRT::~InputFileStreamCRT()
	{
	}
	/////////////////////////////////////////////////////////////////
	void InputFileStreamCRT::close()
	{
		fclose(m_file);
		m_file = NULL;
	}
	/////////////////////////////////////////////////////////////////
	void InputFileStreamCRT::destroy()
	{
		delete this;
	}
	/////////////////////////////////////////////////////////////////
	int InputFileStreamCRT::read( char* _buf, int _count )
	{
		return fread( _buf, 1, _count, m_file );
	}
	/////////////////////////////////////////////////////////////////
	void InputFileStreamCRT::seek( int _pos ) 
	{
		fseek( m_file, 0, _pos );
	}
	/////////////////////////////////////////////////////////////////
	int InputFileStreamCRT::tell()
	{
		return ftell(m_file);
	}
	/////////////////////////////////////////////////////////////////
	int InputFileStreamCRT::size()
	{
		fseek(m_file, 0, SEEK_END);
		unsigned long len = (unsigned long)ftell(m_file);
		return len;
	}
	/////////////////////////////////////////////////////////////////
	bool InputFileStreamCRT::open()
	{
		m_file = fopen( m_fileName.c_str(), "rb" );
		return m_file != NULL;
	}
	/////////////////////////////////////////////////////////////////
	bool InputFileStreamCRT::isOpen()
	{
		return m_file != NULL;
	}
	/////////////////////////////////////////////////////////////////
}